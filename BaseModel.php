<?phpnamespace ts\base;use Yii;/** * This is the base model. * * @author Haisen <thirsight@gmail.com> * @since 1.0 */class BaseModel extends \yii\db\ActiveRecord{    /**     * 为 created_at updated_at 字段自动赋值     *     * @return array     */    public function behaviors()    {        return [            \yii\behaviors\TimestampBehavior::className(),        ];    }    /**     * 无前缀表名     *     * @return string     */    public static function rawTableName()    {        $name = self::tableName();        if (strpos($name, '{{') !== false) {            return preg_replace('/\\{\\{%(.*?)\\}\\}/', '\1', $name);        } else {            return $name;        }    }    /**     * 分表，获取表后缀     *     * @param $param     * @return string     */    public static function tableAutoSuffix($param)    {        if (!isset(Yii::$app->params[$param]) ||            !is_numeric(Yii::$app->params[$param]) ||            Yii::$app->params[$param] == 0) {            return '';        }        if (isset(Yii::$app->user->id_md5) && Yii::$app->user->id_md5) {            $idMd5 = Yii::$app->user->id_md5;        } elseif (Yii::$app->user->id) {            $idMd5 = md5(Yii::$app->user->id);        } else {            $idMd5 = 'cfcd208495d565ef66e7dff9f98764da'; /* md5('0') */        }        $idMd5 = preg_replace('#\D#', '', $idMd5);        $idMd5 = substr($idMd5, 0, Yii::$app->params[$param]);        return '_' . $idMd5;    }    /**     * 根据提供的 $ids 顺序自动排序     * $ids 可以为数组或半角逗号分隔的字符串     *     * @param $attributeId     * @param $attributeSort     * @param $ids Array|String     * @return int|null     */    public static function updateAutoSort($attributeId, $attributeSort, $ids)    {        if (is_string($ids) && strstr($ids, ',')) {            $ids = explode(',', $ids);        }        if (!empty($ids) && is_array($ids)) {            $sql = '';            $params = [];            foreach ($ids as $sort => $id) {                $sort++;                $sql .= "UPDATE " . static::tableName() . " SET `{$attributeSort}` = :sort{$sort} WHERE `{$attributeId}` = :id{$sort};\n";                $params[":sort{$sort}"] = $sort;                $params[":id{$sort}"] = $id;            }            return static::getDb()->createCommand($sql, $params)->execute();        }        return null;    }    /**     * @param $where     * @param $orderBy     * @return array|null|\yii\db\ActiveRecord     */    public static function findLatest($where, $orderBy)    {        return static::find()            ->where($where)            ->orderBy($orderBy)            ->one();    }}